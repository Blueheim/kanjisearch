{"version":3,"sources":["components/Card/List/CardList.module.scss","components/Card/Card.module.scss","components/Card/Card.js","components/Card/List/CardList.js","components/Search/SearchBox.js","util/getData.js","containers/App.js","actions.js","constants.js","serviceWorker.js","reducers.js","index.js"],"names":["module","exports","Cardlist__content","Card","Kanji","Lecture","Spelling","Meaning","_ref","id","character","meaning","kunyomi","onyomi","cardClasses","classNames","classes","headerClasses","bodyClasses","lectureClasses","spellingClasses","meaningClasses","meaningDisplay","map","i","react_default","a","createElement","className","key","kunyomiDisplay","spelling","onyomiDisplay","CardList","kanjis","join","kanji","components_Card_Card","english","SearchBox","searchfield","searchChange","aria-label","type","placeholder","onChange","mocks","GET_ALL","getData","name","data","from","App","this","props","requestKanjis","_this$props","searchField","handleSearchChange","isPending","filteredKanjis","filter","toLowerCase","includes","Search_SearchBox","List_CardList","Component","connect","state","searchKanjis","error","dispatch","event","payload","target","value","subscribe","err","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","initialStateSearch","initialStateKanjis","loggerMiddleware","createLogger","rootReducer","combineReducers","arguments","length","undefined","action","Object","objectSpread","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","es","containers_App","document","getElementById","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5e38d05d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Cardlist__content\":\"CardList_Cardlist__content__1R9X7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"Card_Card__2AI-K\",\"Kanji\":\"Card_Kanji__31dgN\",\"Lecture\":\"Card_Lecture__raTb7\",\"Spelling\":\"Card_Spelling__2h_EO\",\"Meaning\":\"Card_Meaning__3JmVY\"};","import React from 'react';\nimport classes from './Card.module.scss';\nimport classNames from 'classnames';\n\nconst Card = ({ id, character, meaning, kunyomi, onyomi }) => {\n  const cardClasses = classNames('box', 'm-bd-xt', 'm-rd-xt', 'm-mg-xt', classes.Card);\n  const headerClasses = classNames('m-tx-c', 'm-wt-700', 'm-tertiary');\n  const bodyClasses = classNames('side__header', 'm-fx-cl-c-c', 'm-tx-primary', classes.Kanji);\n  const lectureClasses = classNames('m-fx-cl m-tx-c m-bd-xt-t', classes.Lecture);\n  const spellingClasses = classNames('m-wt-900', classes.Spelling);\n  const meaningClasses = classNames(classes.Meaning);\n\n  const meaningDisplay = meaning.map((meaning, i) => (\n    <span className={meaningClasses} key={i}>\n      {meaning}\n    </span>\n  ));\n\n  const kunyomiDisplay = kunyomi.map((spelling, i) => (\n    <div className={spellingClasses} key={i}>\n      <span>{spelling}</span>\n    </div>\n  ));\n\n  const onyomiDisplay = onyomi.map((spelling, i) => (\n    <div className={spellingClasses} key={i}>\n      <span>{spelling}</span>\n    </div>\n  ));\n\n  return (\n    <div className={cardClasses}>\n      <div className=\"side m-fx-cl\">\n        <div className={headerClasses}>\n          <span>{meaningDisplay}</span>\n        </div>\n        <div className={bodyClasses}>\n          <span>{character}</span>\n        </div>\n        <div className=\"side__footer m-fx-sh-c\">\n          <div className={lectureClasses}>\n            <div className=\"m-bd-xt-b m-primary\">KUN</div>\n            <div className=\"m-fx-sh-c m-tx-primary\">{kunyomiDisplay}</div>\n          </div>\n          <div className={lectureClasses}>\n            <div className=\"m-bd-xt-b m-secondary\">ON</div>\n            <div className=\"m-fx-sh-c m-tx-secondary\">{onyomiDisplay}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport Card from '../Card';\n\nimport classes from './CardList.module.scss';\n\nconst CardList = ({ kanjis }) => {\n  return (\n    <section className=\"l-section l-section--simple\">\n      <div className={[classes['Cardlist__content'], 'm-fx-c-sh', 'm-pd-xt'].join(' ')}>\n        {kanjis.map((kanji, i) => {\n          return (\n            <Card\n              key={i}\n              id={kanjis[i].id}\n              meaning={kanjis[i].meaning.english}\n              character={kanjis[i].character}\n              kunyomi={kanjis[i].kunyomi}\n              onyomi={kanjis[i].onyomi}\n            />\n          );\n        })}\n      </div>\n    </section>\n  );\n};\n\nexport default CardList;\n","import React from 'react';\n\nconst SearchBox = ({ searchfield, searchChange }) => {\n  return (\n    <div className=\"\">\n      <input aria-label=\"Search Kanjis\" className=\"\" type=\"search\" placeholder=\"Search kanjis\" onChange={searchChange} />\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import { from } from 'rxjs';\nimport httpObservable from 'simplehttpobservable';\nimport kanjis from '../data/mocks/kanjis.json';\nimport endpoints from '../data/endpoints.json';\n\nconst mocks = {\n  GET_ALL: kanjis,\n};\n\nconst getEndpoint = endpointName => {\n  return endpoints[endpointName];\n};\n\nconst getMock = mockName => {\n  return mocks[mockName];\n};\n\nconst getData = name => {\n  if (process.env.REACT_APP_MOCK) {\n    const data = getMock(name) || [];\n    return from([data]);\n  } else {\n    return httpObservable(getEndpoint(name));\n  }\n};\n\nexport default getData;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CardList from '../components/Card/List/CardList';\nimport SearchBox from '../components/Search/SearchBox';\nimport { setSearchField, requestKanjis } from '../actions';\n\nconst mapStateToProps = state => {\n  return {\n    searchField: state.searchKanjis.searchField,\n    kanjis: state.requestKanjis.kanjis,\n    isPending: state.requestKanjis.isPending,\n    error: state.requestKanjis.error,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleSearchChange: event => dispatch(setSearchField(event.target.value)),\n    requestKanjis: () => dispatch(requestKanjis()),\n  };\n};\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.requestKanjis();\n  }\n\n  render() {\n    const { searchField, handleSearchChange, kanjis, isPending } = this.props;\n\n    const filteredKanjis = kanjis.filter(kanji => {\n      return kanji.meaning.english\n        .join(' ')\n        .toLowerCase()\n        .includes(searchField.toLowerCase());\n    });\n    return isPending ? (\n      <h1>Loading</h1>\n    ) : (\n      <div className=\"m-tx-c\">\n        <h1 className=\"title\">Kanjis</h1>\n        <SearchBox searchChange={handleSearchChange} />\n        <CardList kanjis={filteredKanjis} />\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","import getData from './util/getData';\n\nimport {\n  CHANGE_SEARCH_FIELD,\n  REQUEST_KANJIS_PENDING,\n  REQUEST_KANJIS_SUCCESS,\n  REQUEST_KANJIS_FAILED,\n} from './constants';\n\nexport const setSearchField = text => ({\n  type: CHANGE_SEARCH_FIELD,\n  payload: text,\n});\n\nexport const requestKanjis = () => dispatch => {\n  dispatch({\n    type: REQUEST_KANJIS_PENDING,\n  });\n  getData('GET_ALL').subscribe(\n    data => dispatch({ type: REQUEST_KANJIS_SUCCESS, payload: data }),\n    err => dispatch({ type: REQUEST_KANJIS_FAILED, payload: err })\n  );\n};\n","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\n\nexport const REQUEST_KANJIS_PENDING = 'REQUEST_KANJIS_PENDING';\nexport const REQUEST_KANJIS_SUCCESS = 'REQUEST_KANJIS_SUCCESS';\nexport const REQUEST_KANJIS_FAILED = 'REQUEST_KANJIS_FAILED';\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  CHANGE_SEARCH_FIELD,\n  REQUEST_KANJIS_PENDING,\n  REQUEST_KANJIS_SUCCESS,\n  REQUEST_KANJIS_FAILED,\n} from './constants';\n\nconst initialStateSearch = {\n  searchField: '',\n};\n\nexport const searchKanjis = (state = initialStateSearch, action = {}) => {\n  switch (action.type) {\n    case CHANGE_SEARCH_FIELD:\n      return { ...state, searchField: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst initialStateKanjis = {\n  isPending: false,\n  kanjis: [],\n  error: '',\n};\n\nexport const requestKanjis = (state = initialStateKanjis, action = {}) => {\n  switch (action.type) {\n    case REQUEST_KANJIS_PENDING:\n      return { ...state, isPending: true };\n    case REQUEST_KANJIS_SUCCESS:\n      return { ...state, kanjis: action.payload, isPending: false };\n    case REQUEST_KANJIS_FAILED:\n      return { ...state, error: action.payload, isPending: false };\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\n\nimport './sass/main.scss';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport { searchKanjis, requestKanjis } from './reducers';\n\nconst loggerMiddleware = createLogger();\nconst rootReducer = combineReducers({ searchKanjis, requestKanjis });\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, loggerMiddleware));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}